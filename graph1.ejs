

<html>
<head>
   <meta charset="UTF-8">
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/data.js"></script>
<!-- http://doc.jsfiddle.net/use/hacks.html#css-panel-hack -->
 <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<script src="http://dweet.io/client/dweet.io.min.js"></script>
<style>
.chart {
    min-width: 320px;
    max-width: 800px;
    height: 220px;
    margin: 0 auto;
}
</style>


</head>
<body>

<div id="container"></div>


<script type="text/javascript">


/**
 * In order to synchronize tooltips and crosshairs, override the
 * built-in events with handlers defined on the parent element.
 */
['mousemove', 'touchmove', 'touchstart'].forEach(function (eventType) {
  document.getElementById('container').addEventListener(
    eventType,
    function (e) {
      var chart,
        point,
        i,
        event;

      for (i = 0; i < Highcharts.charts.length; i = i + 1) {
        chart = Highcharts.charts[i];
        // Find coordinates within the chart
        event = chart.pointer.normalize(e);
        // Get the hovered point
        point = chart.series[0].searchPoint(event, true);

        if (point) {
          point.highlight(e);
        }
      }
    }
  );
});

/**
 * Override the reset function, we don't need to hide the tooltips and
 * crosshairs.
 */
Highcharts.Pointer.prototype.reset = function () {
  return undefined;
};

/**
 * Synchronize zooming through the setExtremes event handler.
 */
function syncExtremes(e) {
  var thisChart = this.chart;

  if (e.trigger !== 'syncExtremes') { // Prevent feedback loop
    Highcharts.each(Highcharts.charts, function (chart) {
      if (chart !== thisChart) {
        if (chart.xAxis[0].setExtremes) { // It is null while updating
          chart.xAxis[0].setExtremes(

            e.min,
            e.max,
            undefined,
            false,
            { trigger: 'syncExtremes' }
          );
        }
      }
    });
  }
}

//getting the dweets from my dweets (weatherArezki)

 dweetio.get_latest_dweet_for('weatherArezki', function(err, dweets){
      console.log(err)
      var Humidity=[],Temperature=[], Sound=[];
       for(theDweet in dweets.reverse())
       {
           var dweet = dweets[theDweet];
           console.log(dweet)

           //getting Temperaturevalues from the dweet
           val = dweet.content["weather"][0]

           //getting Humidity values from the dweet
           val2=dweet.content["weather"][1]

           //getting Sound values from the dweet
           val3=dweet.content["weather"][2]

           //getting the date from the dweet
          val3=dweet.created
         
         //pushing values into an array
         Temperature.push(val)
         Humidity.push(val2)
         Sound.push(val3)
        // this.series.chart.xAxis[0].update({categories: dweet.created}, true);

         //array_for_cats.push(dweet.created)
       }
       /**
 * Highlight a point by showing tooltip, setting hover state and draw crosshair
 */
Highcharts.Point.prototype.highlight = function (event) {
  event = this.series.chart.pointer.normalize(event);
  this.onMouseOver(); // Show the hover marker
  this.series.chart.tooltip.refresh(this); // Show the tooltip
  this.series.chart.xAxis[0].drawCrosshair(event, this); 
  //this.series.chart.xAxis[0].update({categories: dweet.created}, true);

    };

      // Check browser support
    if (typeof(Storage) !== "undefined") {

   
       //limit the three arays into 100 values    
       var array1=Temperature.slice(Math.max(Temperature.length - 100, 1))
       var array2=Humidity.slice(Math.max(Humidity.length - 100, 1))
       var array3=Sound.slice(Math.max(Sound.length - 100, 1))
        
       
                 
                // retrieve stored data (JSON stringified) and convert
        var TemperatureStorage= localStorage.getItem("Temperature");
        if (TemperatureStorage) {
           var value1 = JSON.parse(TemperatureStorage);
        } 

       var HumidityStorage= localStorage.getItem("Humidity");
        if (HumidityStorage) {
           var value2 = JSON.parse(HumidityStorage);
        } 
         var SoundStorage= localStorage.getItem("Sound");
        if (SoundStorage) {
           var value3 = JSON.parse(SoundStorage);
        } 
     

    }
     
     console.log(value3)

activity={
    "xData": [],
    "datasets": [{
        "name": "Temperature",
        "data": value1,
        "unit": "Â°C",
        "type": "line"
        
    }, {
        "name": "Humidity",
        "data": value2,
        "unit": "%rh",
        "type": "area",
        "valueDecimals": 0
    }, {
        "name": "Sound",
        "data": value3,
        "unit": "Decibel",
        "type": "area",
        "valueDecimals": 0
    }]
}

   
   activity.datasets.forEach(function (dataset, i) {

      // Add X values
      dataset.data = Highcharts.map(dataset.data, function (val, j) {
        return [activity.xData[j], val];
      });

      var chartDiv = document.createElement('div');
      chartDiv.className = 'chart';
      document.getElementById('container').appendChild(chartDiv);

      Highcharts.chart(chartDiv,
       {
        chart: {
          marginLeft: 40, // Keep all charts left aligned
          spacingTop: 20,
          spacingBottom: 20
        },
        title: {
          text: dataset.name,
          align: 'left',
          margin: 0,
          x: 30
        },
        credits: {
          enabled: false
        },
        legend: {
          enabled: false
        },
        xAxis: [{
        categories:dweet.created,
        crosshair: true,
        type: 'datetime',
    }],

        
        yAxis: {
          title: {
            text: null
          }
        },
        tooltip: {
          positioner: function () {
            return {
              // right aligned
              x: this.chart.chartWidth - this.label.width,
              y: 10 // align to title
            };
          },
          borderWidth: 0,
          backgroundColor: 'none',
          pointFormat: '{point.y}',
          headerFormat: '',
          shadow: false,
          style: {
            fontSize: '18px'
          },
          valueDecimals: dataset.valueDecimals
        },
        series: [{
          data: dataset.data,
          name: dataset.name,
          type: dataset.type,
          color: Highcharts.getOptions().colors[i],
          fillOpacity: 0.3,
          tooltip: {
            valueSuffix: ' ' + dataset.unit
          }
        }]


      });


//start of gettingt the instant dweets
 dweetio.listen_for('weatherArezki', function(dweet){
           val = dweet.content["Temperature"]
         console.log("happened")  
         var chart = $('#container').chartDiv.highcharts();
         chart.series[0].addPoint(parseInt(val));  
         array_for_cats.push(dweet.created) 
         //chart.xAxis[0].update({categories: dweet.created}, true);
         this.series.chart.xAxis[0].update({categories: dweet.created})
   });
        
    });
 
//end of getting the dweets 
  });



</script>

</body>
</html>